{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww28300\viewh15940\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 var net = require('net');\
var redis = require("redis");\
\
client = redis.createClient();\
\
client.on("error", function(err) \{\
        console.log("Error " + err);\
\});\
\
var socketMap = new Array();\
\
// uploader's username : downloader's socket mapping. populated by downloader.\
var fileTransferMap = new Array();\
\
net.createServer(\
                function(socket) \{\
\
                        socket.on('connect', function(data) \{\
                                console.log("connection from : " + socket.remoteAddress\
                                                + ", port = " + socket.remotePort);\
                        \});\
\
                        socket.on('data', function(data) \{\
                                var obj = JSON.parse(data);\
                                var username = obj.username;\
                                var packetType = obj.packet_type;\
                                var fileName, fileSize;\
\
                                if (packetType == "bootup") \{\
                                        console.log("bootup from user = " + username);\
                                        socketMap[username] = socket;\
                                \}\
\
                                if (packetType == "file_push_req") \{\
\
                                        var payload = \{\};\
                                        payload.packet_type = "file_push_req";\
                                        payload.file_size = obj.file_size;\
                                        payload.file_name = obj.file_name;\
                                        payload.uploader_username = obj.username;\
                                        console.log("filename = " + obj.file_name);\
                                        console.log("gonna send push_req: " + JSON.stringify(payload));\
\
                                        try \{\
                                                sendMessage(obj.to, JSON.stringify(payload));\
                                        \} catch (err) \{\
                                        // for now, we assume this happened cos the recipient doesn't exist yet:\
                                                var payload = \{\};\
                                                payload.packet_type = "recipient_not_found";\
                                                payload.unknown_recipient = obj.to;\
                                                console.log("recipient not found, replying back to: " + obj.username);\
                                                sendMessage(obj.username, JSON.stringify(payload));\
                                        \}\
                                \}\
\
                                if (packetType == "file_push_req_ack") \{\
\
                                        var payload = \{\};\
                                        payload.packet_type = "file_push_req_ack";\
                                        payload.downloader_username = obj.username;\
\
                                        console.log("gonna send file_push_req_ack: "\
                                                        + JSON.stringify(payload));\
\
                                        sendMessage(obj.to, JSON.stringify(payload));\
                                \}\
\
                        \});\
\
                        function sendMessage(recipient, message) \{\
                                socketMap[recipient].write(message);\
                        \}\
\
                \}).listen(64000);\
\
// ///File transfer server:\
\
net.createServer(\
                function(socket) \{\
                        var iAmAnUploaderMyUsername = null;\
                        socket.on('connect', function(data) \{\
                                console.log("connection from : " + socket.remoteAddress\
                                                + ", port = " + socket.remotePort);\
                        \});\
\
                        socket.on('data', function(data) \{\
\
                                console.log("obj type = " + typeof data);\
                                var obj;\
                                try \{\
                                        obj  = JSON.parse(data);\
                                \} catch(err) \{\
                                        console.log("caught, biatch!");\
                                        console.log("map contains = " + typeof fileTransferMap[iAmAnUploaderMyUsername] );\
                                        console.log("Writing file chunk from = "\
                                                                + iAmAnUploaderMyUsername);\
                                                fileTransferMap[iAmAnUploaderMyUsername].write(data);\
\
                                \}\
\
                                // only the first packet has packet_type. subsequent ones are\
                                // file\
                                // chunks (if this is an uploader).\
                                if (typeof obj != "undefined") \{\
                                if (obj.packet_type != null) \{\
                                        // downloader must send uploader's username.\
                                        if (obj.packet_type == "download_stream") \{\
                                                console.log("Download stream opened from : "\
                                                                + obj.username);\
                                                fileTransferMap[obj.uploader_username] = socket;\
                                        \}\
\
                                        if (obj.packet_type == "upload_stream") \{\
                                                console.log("Upload stream opened from : "\
                                                                + obj.username);\
                                                iAmAnUploaderMyUsername = obj.username;\
                                        \}\
\
                                \}\
                                \}\
                        \});\
                \}).listen(65000);\
\
                                                                                                  \
\
}